#
# Proftpd sample configuration for Virtual Hosts and Virtual Roots.
#
# Note that FTP protocol requires IP based virtual host, not name based.
#

# 
# A generic sample virtual host.
#
#<VirtualHost ftp.server.com>
#ServerAdmin             ftpmaster@server.com
#ServerName              "Big FTP Archive"
#TransferLog             /var/log/proftpd/xfer/ftp.server.com
#MaxLoginAttempts        3
#RequireValidShell       no
#DefaultRoot             /srv/ftp_root
#AllowOverwrite          yes
#</VirtualHost>

# [David: yyyy:mm:dd]
<VirtualHost 172.20.200.140>
ServerAdmin             bigfish@root.toor
ServerName              "Servidor FTP empresa"
AuthUserFile 		/etc/passwd.empresa.usuarios.virtuales
TransferLog             /var/log/proftpd/xfer/todo-empresa-tarea-daw04
MaxLoginAttempts        3
RequireValidShell       no
DefaultRoot             /var/ftp/todo-empresa-tarea-daw04/
#AllowOverwrite          yes


#
# Proftpd sample configuration for FTPS connections.
#
# Note that FTPS impose some limitations in NAT traversing.
# See http://www.castaglia.org/proftpd/doc/contrib/ProFTPD-mini-HOWTO-TLS.html
# for more information.
#

<IfModule mod_tls.c>
TLSEngine                               on
TLSLog                                  /var/log/proftpd/tls.log
TLSProtocol                             SSLv23

#
# Server SSL certificate. You can generate a self-signed certificate using 
# a command like:
#
# openssl req -x509 -newkey rsa:1024 \
#          -keyout /etc/ssl/private/proftpd.key -out /etc/ssl/certs/proftpd.crt \
#          -nodes -days 365
#
# The proftpd.key file must be readable by root only. The other file can be
# readable by anyone.
#
# chmod 0600 /etc/ssl/private/proftpd.key 
# chmod 0640 /etc/ssl/private/proftpd.key
# 
TLSRSACertificateFile                   /etc/ssl/certs/proftpd.crt
TLSRSACertificateKeyFile                /etc/ssl/private/proftpd.key
#
# CA the server trusts...
#TLSCACertificateFile 			 /etc/ssl/certs/CA.pem
# ...or avoid CA cert and be verbose
#TLSOptions                      NoCertRequest EnableDiags 
# ... or the same with relaxed session use for some clients (e.g. FireFtp)
#TLSOptions                      NoCertRequest EnableDiags NoSessionReuseRequired
TLSOptions                      EnableDiags NoSessionReuseRequired
#
# Per default drop connection if client tries to start a renegotiate
# This is a fix for CVE-2009-3555 but could break some clients.
#
#TLSOptions 							AllowClientRenegotiations
#
# Authenticate clients that want to use FTP over TLS?
#
TLSVerifyClient                         off
#
# Are clients required to use FTP over TLS when talking to this server?
#
TLSRequired                             on

# Allow SSL/TLS renegotiations when the client requests them, but
# do not force the renegotations.  Some clients do not support
# SSL/TLS renegotiations; when mod_tls forces a renegotiation, these
# clients will close the data connection, or there will be a timeout
# on an idle data connection.
#
#TLSRenegotiate                          required off
</IfModule>

#
# The vroot module is not required, but can be useful for shared
# directories.
#
<IfModule mod_vroot.c>
#VRootEngine on

#DefaultRoot ~
#VRootAlias upload /var/ftp/upload
#
#<VirtualHost a.b.c.d>
#VRootEngine on
#VRootServerRoot /etc/ftpd/a.b.c.d/
#VRootOptions allowSymlinks
#DefaultRoot ~
#</VirtualHost>
#
</IfModule>
</VirtualHost>
